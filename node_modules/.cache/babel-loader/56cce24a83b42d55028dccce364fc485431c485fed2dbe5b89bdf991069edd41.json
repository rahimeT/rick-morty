{"ast":null,"code":"var _JSON$parse;\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  characters: localStorage.getItem('selectedCharacters') ? // @ts-ignore\n  (_JSON$parse = JSON.parse(localStorage.getItem('selectedCharacters'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.characters : []\n};\nexport const charactersSlice = createSlice({\n  name: 'characters',\n  initialState,\n  reducers: {\n    handleCharacter: (state, action) => {\n      const existCharacter = state.characters.find(character => character.id === action.payload.id);\n      if (!existCharacter) {\n        state.characters.unshift({\n          ...action.payload\n        });\n      } else {\n        let newCharacters = state.characters.filter(character => character.id !== action.payload.id);\n        state.characters = newCharacters;\n      }\n    },\n    deleteCharacter: (state, action) => {\n      let newCharacters = state.characters.filter(character => character.id !== action.payload.id);\n      state.characters = newCharacters;\n    }\n  }\n});\nexport const {\n  handleCharacter,\n  deleteCharacter\n} = charactersSlice.actions;\nexport default charactersSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","characters","localStorage","getItem","_JSON$parse","JSON","parse","charactersSlice","name","reducers","handleCharacter","state","action","existCharacter","find","character","id","payload","unshift","newCharacters","filter","deleteCharacter","actions","reducer"],"sources":["/Users/rahimeturkmen/Desktop/DevOps-Style-App/rick-morty/src/redux/features/CharactersSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\ninterface ICharacterState {\n  characters: any[];\n}\n\nconst initialState: ICharacterState = {\n  characters: localStorage.getItem('selectedCharacters')\n    ? // @ts-ignore\n      JSON.parse(localStorage.getItem('selectedCharacters'))?.characters\n    : [],\n};\n\nexport const charactersSlice = createSlice({\n  name: 'characters',\n  initialState,\n  reducers: {\n    handleCharacter: (state, action) => {\n      const existCharacter = state.characters.find(\n        (character) => character.id === action.payload.id\n      );\n      if (!existCharacter) {\n        state.characters.unshift({ ...action.payload });\n      } else {\n        let newCharacters = state.characters.filter(\n          (character) => character.id !== action.payload.id\n        );\n        state.characters = newCharacters;\n      }\n    },\n    deleteCharacter: (state, action) => {\n      let newCharacters = state.characters.filter(\n        (character) => character.id !== action.payload.id\n      );\n      state.characters = newCharacters;\n    },\n  },\n});\nexport const { handleCharacter, deleteCharacter } = charactersSlice.actions;\n\nexport default charactersSlice.reducer;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAM9C,MAAMC,YAA6B,GAAG;EACpCC,UAAU,EAAEC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,GAClD;EAAA,CAAAC,WAAA,GACAC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC,cAAAC,WAAA,uBAAtDA,WAAA,CAAwDH,UAAU,GAClE;AACN,CAAC;AAED,OAAO,MAAMM,eAAe,GAAGR,WAAW,CAAC;EACzCS,IAAI,EAAE,YAAY;EAClBR,YAAY;EACZS,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAMC,cAAc,GAAGF,KAAK,CAACV,UAAU,CAACa,IAAI,CACzCC,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACjD,CAAC;MACD,IAAI,CAACH,cAAc,EAAE;QACnBF,KAAK,CAACV,UAAU,CAACiB,OAAO,CAAC;UAAE,GAAGN,MAAM,CAACK;QAAQ,CAAC,CAAC;MACjD,CAAC,MAAM;QACL,IAAIE,aAAa,GAAGR,KAAK,CAACV,UAAU,CAACmB,MAAM,CACxCL,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACjD,CAAC;QACDL,KAAK,CAACV,UAAU,GAAGkB,aAAa;MAClC;IACF,CAAC;IACDE,eAAe,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAClC,IAAIO,aAAa,GAAGR,KAAK,CAACV,UAAU,CAACmB,MAAM,CACxCL,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACjD,CAAC;MACDL,KAAK,CAACV,UAAU,GAAGkB,aAAa;IAClC;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAET,eAAe;EAAEW;AAAgB,CAAC,GAAGd,eAAe,CAACe,OAAO;AAE3E,eAAef,eAAe,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}