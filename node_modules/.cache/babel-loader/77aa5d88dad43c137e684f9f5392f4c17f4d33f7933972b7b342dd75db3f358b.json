{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://rickandmortyapi.com/api';\nconst FetchMainData = async (endpoint, page) => {\n  const url = endpoint ? `${API_BASE_URL}/${endpoint}/?page=${page}` : API_BASE_URL;\n  try {\n    var _response$data;\n    const response = await axios.get(url);\n    return response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch data', error);\n  }\n};\n_c = FetchMainData;\nconst FetchQueryData = async (endpoint, query) => {\n  const url = query ? `${API_BASE_URL}/${endpoint}=${query === null || query === void 0 ? void 0 : query.query}` : API_BASE_URL;\n  try {\n    var _response$data2;\n    const response = await axios.get(url);\n    return response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.results;\n  } catch (error) {\n    throw new Error('Failed to fetch data', error);\n  }\n};\n_c2 = FetchQueryData;\nexport { FetchMainData, FetchQueryData };\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchMainData\");\n$RefreshReg$(_c2, \"FetchQueryData\");","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","FetchMainData","endpoint","page","url","_response$data","response","get","data","results","error","Error","_c","FetchQueryData","query","_response$data2","_c2","$RefreshReg$"],"sources":["/Users/rahimeturkmen/Desktop/DevOps-Style-App/rick-morty/src/components/api/FetchData.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || 'https://rickandmortyapi.com/api';\n\ninterface IQuery {\n  query: string;\n}\n\nconst FetchMainData = async (endpoint: string, page: number) => {\n  const url = endpoint\n    ? `${API_BASE_URL}/${endpoint}/?page=${page}`\n    : API_BASE_URL;\n\n  try {\n    const response = await axios.get(url);\n    return response?.data?.results;\n  } catch (error: any) {\n    throw new Error('Failed to fetch data', error);\n  }\n};\n\nconst FetchQueryData = async (endpoint: string, query: IQuery) => {\n  const url = query\n    ? `${API_BASE_URL}/${endpoint}=${query?.query}`\n    : API_BASE_URL;\n\n  try {\n    const response = await axios.get(url);\n    return response?.data?.results;\n  } catch (error: any) {\n    throw new Error('Failed to fetch data', error);\n  }\n};\n\nexport { FetchMainData, FetchQueryData };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAChBC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,iCAAiC;AAMzE,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,IAAY,KAAK;EAC9D,MAAMC,GAAG,GAAGF,QAAQ,GACf,GAAEL,YAAa,IAAGK,QAAS,UAASC,IAAK,EAAC,GAC3CN,YAAY;EAEhB,IAAI;IAAA,IAAAQ,cAAA;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACH,GAAG,CAAC;IACrC,OAAOE,QAAQ,aAARA,QAAQ,wBAAAD,cAAA,GAARC,QAAQ,CAAEE,IAAI,cAAAH,cAAA,uBAAdA,cAAA,CAAgBI,OAAO;EAChC,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,EAAED,KAAK,CAAC;EAChD;AACF,CAAC;AAACE,EAAA,GAXIX,aAAa;AAanB,MAAMY,cAAc,GAAG,MAAAA,CAAOX,QAAgB,EAAEY,KAAa,KAAK;EAChE,MAAMV,GAAG,GAAGU,KAAK,GACZ,GAAEjB,YAAa,IAAGK,QAAS,IAAGY,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEA,KAAM,EAAC,GAC7CjB,YAAY;EAEhB,IAAI;IAAA,IAAAkB,eAAA;IACF,MAAMT,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACH,GAAG,CAAC;IACrC,OAAOE,QAAQ,aAARA,QAAQ,wBAAAS,eAAA,GAART,QAAQ,CAAEE,IAAI,cAAAO,eAAA,uBAAdA,eAAA,CAAgBN,OAAO;EAChC,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,EAAED,KAAK,CAAC;EAChD;AACF,CAAC;AAACM,GAAA,GAXIH,cAAc;AAapB,SAASZ,aAAa,EAAEY,cAAc;AAAG,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}